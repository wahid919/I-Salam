<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\models\base;

use Yii;
use app\models\JenisPembayaran;
use yii\behaviors\TimestampBehavior;
use yii\db\Expression;
use yii\helpers\Url;

/**
 * This is the base-model class for table "pembayaran".
 *
 * @property integer $id
 * @property string $nama
 * @property integer $nominal
 * @property string $bukti_transaksi
 * @property integer $user_id
 * @property string $bank
 * @property integer $pendanaan_id
 * @property string $tanggal_pembayaran
 * @property integer $status_id
 * @property string $created_at
 * @property string $updated_at
 *
 * @property \app\models\Status $status
 * @property \app\models\User $user
 * @property \app\models\Pendanaan $pendanaan
 * @property string $aliasModel
 */
abstract class Pembayaran extends \yii\db\ActiveRecord
{

    public function fields()
    {
        $parent = parent::fields();

        


       

        if (isset($parent['pendanaan_id'])) {
            unset($parent['pendanaan_id']);
            
            $parent['pendanaan'] = function ($model) {
                return $model->pendanaan;
            };
        }

        if (isset($parent['code'])) {
            unset($parent['code']);
            
            $parent['code'] = function ($model) {
                return $model->code;
            };
        }
        if (!isset($parent['url'])) {
            unset($parent['url']);
            
            $parent['url'] = function ($model) {
                return 'https://app.midtrans.com/snap/v2/vtweb/'.$model->code;
            };
        }
        if (isset($parent['jenis'])) {
            unset($parent['jenis']);
            
            $parent['jenis_pembayaran_pendanaan'] = function ($model) {
                return $model->jenis;
            };
        }
        if (!isset($parent['link_ikrar'])) {
            unset($parent['link_ikrar']);
            // $parent['_link_ikrar'] = function ($model) {
            //     return $model->link_ikrar;
            // };
            $parent['link_ikrar'] = function ($model) {
                $pembayar =  \app\models\Pembayaran::find()->where(['id'=>$model->id])->one();
                if($pembayar->status_id == 6){
                    $byr = Url::to(['home/cetak', 'id' => $pembayar->kode_transaksi]);
                }else{
                    $byr = "-";
                }
                return $byr;
            };
            
        }
        if (isset($parent['status_id'])) {
            unset($parent['status_id']);
            
            $parent['status'] = function ($model) {
                $curl = curl_init();

                curl_setopt_array($curl, array(
                    CURLOPT_URL => "https://api.midtrans.com/v2/" . $model->kode_transaksi . "/status",
                    CURLOPT_RETURNTRANSFER => true,
                    CURLOPT_ENCODING => "",
                    CURLOPT_MAXREDIRS => 10,
                    CURLOPT_TIMEOUT => 0,
                    CURLOPT_FOLLOWLOCATION => true,
                    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                    CURLOPT_CUSTOMREQUEST => "GET",
                    CURLOPT_POSTFIELDS => "\n\n",
                    CURLOPT_HTTPHEADER => array(
                        "Accept: application/json",
                        "Content-Type: application/json",
                        "Authorization: Basic TWlkLXNlcnZlci1oV3hSekx0a3NmX0s4SUNhY3RjZ0Fwdl86"
                    ),
                ));
        
                $response = curl_exec($curl);
        
                curl_close($curl);
                $a = json_decode($response);
                if($a->status_code == "404"){
                    return "Pending";
                }else{
                    if($a->transaction_status == "pending"){
                        return "Pending";
                    }elseif($a->transaction_status == "capture" || $a->transaction_status == "settlement" ){
                        return "Pembayaran Berhasil";
                    }elseif($a->transaction_status == "deny" || $a->transaction_status == "cancel" || $a->transaction_status == "expire" ){
                        return "Pembayaran Gagal";
                    }
                }
            };
        }
        if (isset($parent['jenis_pembayaran_id'])) {
            unset($parent['jenis_pembayaran_id']);
            
            $parent['jenis_pembayaran'] = function ($model) {
                $curl = curl_init();

                curl_setopt_array($curl, array(
                    CURLOPT_URL => "https://api.midtrans.com/v2/" . $model->kode_transaksi . "/status",
                    CURLOPT_RETURNTRANSFER => true,
                    CURLOPT_ENCODING => "",
                    CURLOPT_MAXREDIRS => 10,
                    CURLOPT_TIMEOUT => 0,
                    CURLOPT_FOLLOWLOCATION => true,
                    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                    CURLOPT_CUSTOMREQUEST => "GET",
                    CURLOPT_POSTFIELDS => "\n\n",
                    CURLOPT_HTTPHEADER => array(
                        "Accept: application/json",
                        "Content-Type: application/json",
                        "Authorization: Basic TWlkLXNlcnZlci1oV3hSekx0a3NmX0s4SUNhY3RjZ0Fwdl86"
                    ),
                ));
        
                $response = curl_exec($curl);
        
                curl_close($curl);
                $a = json_decode($response);
                if($a->status_code == "404"){
                    return "Tidak Ditemukan";
                }else{
                    if($a->payment_type == "cstore"){
                        return $a->store;
                    }else{
                        return $a->payment_type;
                    }
                }
            };
        }
        if (!isset($parent['status_transaksi'])) {
            unset($parent['status_transaksi']);
            // $parent['_status_transaksi'] = function ($model) {
            //     return $model->status_transaksi;
            // };
            $parent['status_transaksi'] = function ($model) {
                $pembayar =  \app\models\Status::find()->where(['id'=>$model->status_id])->one();
                return $pembayar;
            };
            
        }
        unset($parent['updated_at']);
        unset($parent['created_at']);
        
        return $parent;
    }


    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'pembayaran';
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::className(),
                'createdAtAttribute' => 'created_at',
                'updatedAtAttribute' => 'updated_at',
                'value' => new Expression('NOW()'),
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['nama', 'nominal', 'kode_transaksi', 'user_id', 'pendanaan_id', 'status_id'], 'required'],
            [['nominal', 'user_id', 'pendanaan_id', 'status_id','jumlah_lembaran'], 'integer'],
            [['tanggal_upload_bukti', 'tanggal_konfirmasi'], 'safe'],
            [['keterangan','amanah_pendanaan'], 'string'],
            [['nama', 'bukti_transaksi','jenis_pembayaran_id','code','jenis','qr_code','link_qr'], 'string', 'max' => 255],
            [['status_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\Status::className(), 'targetAttribute' => ['status_id' => 'id']],
            [['user_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\User::className(), 'targetAttribute' => ['user_id' => 'id']],
            [['pendanaan_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\Pendanaan::className(), 'targetAttribute' => ['pendanaan_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'kode_transaksi' => 'Kode Transaksi',
            'nama' => 'Nama',
            'nominal' => 'Nominal',
            'jumlah_lembaran' => 'Jumlah Lembaran',
            'jenis_pembayaran_id' => 'Jenis Pembayaran',
            'bukti_transaksi' => 'Bukti Transaksi',
            'user_id' => 'Pewakaf',
            'pendanaan_id' => 'Pendanaan',
            'tanggal_upload_bukti' => 'Tanggal Upload Bukti',
            'tanggal_konfirmasi' => 'Tanggal Konfirmasi',
            'created_at' => 'Created At',
            'updated_at' => 'Updated At',
            'status_id' => 'Status',
            'jenis' => 'Jenis', 
            'keterangan' => 'Keterangan',
            'amanah_pendanaan' => 'Amanah Pendanaan',
            'qr_code' => 'Qr Code',
            'link_qr' => 'Link Qr',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getStatus()
    {
        return $this->hasOne(\app\models\Status::className(), ['id' => 'status_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUser()
    {
        return $this->hasOne(\app\models\User::className(), ['id' => 'user_id']);
    }

    

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPendanaan()
    {
        return $this->hasOne(\app\models\Pendanaan::className(), ['id' => 'pendanaan_id']);
    }





}
